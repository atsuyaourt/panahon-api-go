// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Emilio Gozo",
            "email": "emiliogozo@proton.me"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/glabs": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "globelabs"
                ],
                "summary": "Globe Labs opt-in",
                "parameters": [
                    {
                        "type": "string",
                        "name": "access_token",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "subscriber_number",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GlobeLabsOptInResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "globelabs"
                ],
                "summary": "Globe Labs unsubscribe",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/glabs/load": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "globelabs"
                ],
                "summary": "Create Globe Labs entry",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GlobeLabsLoadResponse"
                        }
                    }
                }
            }
        },
        "/lufft/{station_id}/logs": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lufft"
                ],
                "summary": "Lufft Message Logs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Station ID",
                        "name": "station_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 30,
                        "minimum": 1,
                        "type": "integer",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.paginatedLufftMsgLogs"
                        }
                    }
                }
            }
        },
        "/observations": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "observations"
                ],
                "summary": "list station observation",
                "parameters": [
                    {
                        "type": "string",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 30,
                        "minimum": 1,
                        "type": "integer",
                        "description": "limit",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "station_ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PaginatedStationObservations"
                        }
                    }
                }
            }
        },
        "/observations/latest": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "observations"
                ],
                "summary": "list latest observation",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LatestObservation"
                            }
                        }
                    }
                }
            }
        },
        "/ptexter": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "promotexter"
                ],
                "summary": "Store Lufft observation and health",
                "parameters": [
                    {
                        "type": "string",
                        "name": "msg",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "number",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/LufftResponse"
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "List roles",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 30,
                        "minimum": 1,
                        "type": "integer",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PaginatedRoles"
                        }
                    }
                }
            }
        },
        "/roles/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Get role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Update role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update role parameters",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateRoleParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Create role",
                "parameters": [
                    {
                        "description": "Create role parameters",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateRoleParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Delete role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/stations": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stations"
                ],
                "summary": "List stations",
                "parameters": [
                    {
                        "type": "string",
                        "name": "bbox",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "circle",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "limit",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PaginatedStations"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stations"
                ],
                "summary": "Create station",
                "parameters": [
                    {
                        "description": "Create station parameters",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateStationParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Station"
                        }
                    }
                }
            }
        },
        "/stations/nearest/observations/latest": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "observations"
                ],
                "summary": "Get nearest latest station observation",
                "parameters": [
                    {
                        "type": "string",
                        "name": "pt",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/LatestObservation"
                        }
                    }
                }
            }
        },
        "/stations/{station_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stations"
                ],
                "summary": "Get station",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Station ID",
                        "name": "station_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Station"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stations"
                ],
                "summary": "Update station",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Station ID",
                        "name": "station_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update station parameters",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateStationParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Station"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stations"
                ],
                "summary": "Delete station",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Station ID",
                        "name": "station_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/stations/{station_id}/observations": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "observations"
                ],
                "summary": "List station observations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Station ID",
                        "name": "station_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 30,
                        "minimum": 1,
                        "type": "integer",
                        "description": "limit",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "start_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PaginatedStationObservations"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "observations"
                ],
                "summary": "Create station observation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Station ID",
                        "name": "station_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create station observation parameters",
                        "name": "stnObs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateStationObservationParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/StationObservation"
                        }
                    }
                }
            }
        },
        "/stations/{station_id}/observations/latest": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "observations"
                ],
                "summary": "Get latest station observation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Station ID",
                        "name": "station_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/LatestObservation"
                        }
                    }
                }
            }
        },
        "/stations/{station_id}/observations/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "observations"
                ],
                "summary": "Get station observation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Station ID",
                        "name": "station_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Station Observation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StationObservation"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "observations"
                ],
                "summary": "Update station observation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Station ID",
                        "name": "station_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Station Observation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update station observation parameters",
                        "name": "stnObs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateStationObservationParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StationObservation"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "observations"
                ],
                "summary": "Delete station observation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Station ID",
                        "name": "station_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Station Observation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/tokens/renew": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Renew access token",
                "parameters": [
                    {
                        "description": "Renew access token parameters",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RenewAccessTokenParams"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List users",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 30,
                        "minimum": 1,
                        "type": "integer",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PaginatedUsers"
                        }
                    }
                }
            }
        },
        "/users/auth": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get Auth User",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login user parameters",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoginUserParams"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/users/logout": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "User logout",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "Register user parameters",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RegisterUserParams"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update user parameters",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateUserParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "Create user parameters",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateUserParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        }
    },
    "definitions": {
        "CreateRoleParams": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "CreateStationObservationParams": {
            "type": "object",
            "properties": {
                "hi": {
                    "type": "number"
                },
                "mslp": {
                    "type": "number"
                },
                "pres": {
                    "type": "number"
                },
                "qc_level": {
                    "type": "integer"
                },
                "rh": {
                    "type": "number"
                },
                "rr": {
                    "type": "number"
                },
                "srad": {
                    "type": "number"
                },
                "td": {
                    "type": "number"
                },
                "temp": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "string"
                },
                "wchill": {
                    "type": "number"
                },
                "wdir": {
                    "type": "number"
                },
                "wspd": {
                    "type": "number"
                },
                "wspdx": {
                    "type": "number"
                }
            }
        },
        "CreateStationParams": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "date_installed": {
                    "type": "string"
                },
                "elevation": {
                    "type": "number"
                },
                "lat": {
                    "type": "number"
                },
                "lon": {
                    "type": "number"
                },
                "mobile_number": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "station_type": {
                    "type": "string"
                },
                "station_type2": {
                    "type": "string"
                },
                "station_url": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "CreateUserParams": {
            "type": "object",
            "required": [
                "email",
                "full_name",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "GlobeLabsLoadResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "mobile_number": {
                    "type": "string"
                },
                "promo": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "integer"
                }
            }
        },
        "GlobeLabsOptInResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "is_created": {
                    "type": "boolean"
                },
                "mobile_number": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "LatestObservation": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "elevation": {
                    "$ref": "#/definitions/util.Float4"
                },
                "id": {
                    "type": "integer"
                },
                "lat": {
                    "$ref": "#/definitions/util.Float4"
                },
                "lon": {
                    "$ref": "#/definitions/util.Float4"
                },
                "name": {
                    "type": "string"
                },
                "obs": {
                    "$ref": "#/definitions/api.latestObsRes"
                }
            }
        },
        "LoginUserParams": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "LufftMsgLog": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "LufftResponse": {
            "type": "object",
            "properties": {
                "health": {
                    "$ref": "#/definitions/StationHealth"
                },
                "observation": {
                    "$ref": "#/definitions/StationObservation"
                },
                "station": {
                    "$ref": "#/definitions/Station"
                }
            }
        },
        "PaginatedRoles": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Role"
                    }
                },
                "next_page": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "prev_page": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "PaginatedStationObservations": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StationObservation"
                    }
                },
                "next_page": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "prev_page": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "PaginatedStations": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Station"
                    }
                },
                "next_page": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "prev_page": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "PaginatedUsers": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User"
                    }
                },
                "next_page": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "prev_page": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "RegisterUserParams": {
            "type": "object",
            "required": [
                "confirm_password",
                "email",
                "full_name",
                "password",
                "username"
            ],
            "properties": {
                "confirm_password": {
                    "type": "string",
                    "minLength": 6
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "RenewAccessTokenParams": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "Role": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "Station": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "date_installed": {
                    "type": "string"
                },
                "elevation": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "lat": {
                    "type": "number"
                },
                "lon": {
                    "type": "number"
                },
                "mobile_number": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "station_type": {
                    "type": "string"
                },
                "station_type2": {
                    "type": "string"
                },
                "station_url": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "StationHealth": {
            "type": "object",
            "properties": {
                "bp1": {
                    "type": "number"
                },
                "bp2": {
                    "type": "number"
                },
                "cm": {
                    "type": "string"
                },
                "curr": {
                    "type": "number"
                },
                "data_count": {
                    "type": "integer"
                },
                "data_status": {
                    "type": "string"
                },
                "error_msg": {
                    "type": "string"
                },
                "fpm": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "rh_arq": {
                    "type": "number"
                },
                "ss": {
                    "type": "integer"
                },
                "station_id": {
                    "type": "integer"
                },
                "temp_arq": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "string"
                },
                "vb1": {
                    "type": "number"
                },
                "vb2": {
                    "type": "number"
                }
            }
        },
        "StationObservation": {
            "type": "object",
            "properties": {
                "hi": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "mslp": {
                    "type": "number"
                },
                "pres": {
                    "type": "number"
                },
                "qc_level": {
                    "type": "integer"
                },
                "rh": {
                    "type": "number"
                },
                "rr": {
                    "type": "number"
                },
                "srad": {
                    "type": "number"
                },
                "station_id": {
                    "type": "integer"
                },
                "td": {
                    "type": "number"
                },
                "temp": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "string"
                },
                "wchill": {
                    "type": "number"
                },
                "wdir": {
                    "type": "number"
                },
                "wspd": {
                    "type": "number"
                },
                "wspdx": {
                    "type": "number"
                }
            }
        },
        "UpdateRoleParams": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "UpdateStationObservationParams": {
            "type": "object",
            "properties": {
                "hi": {
                    "type": "number"
                },
                "mslp": {
                    "type": "number"
                },
                "pres": {
                    "type": "number"
                },
                "qc_level": {
                    "$ref": "#/definitions/pgtype.Int4"
                },
                "rh": {
                    "type": "number"
                },
                "rr": {
                    "type": "number"
                },
                "srad": {
                    "type": "number"
                },
                "td": {
                    "type": "number"
                },
                "temp": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "string"
                },
                "wchill": {
                    "type": "number"
                },
                "wdir": {
                    "type": "number"
                },
                "wspd": {
                    "type": "number"
                },
                "wspdx": {
                    "type": "number"
                }
            }
        },
        "UpdateStationParams": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "date_installed": {
                    "type": "string"
                },
                "elevation": {
                    "type": "number"
                },
                "lat": {
                    "type": "number"
                },
                "lon": {
                    "type": "number"
                },
                "mobile_number": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "station_type": {
                    "type": "string"
                },
                "station_type2": {
                    "type": "string"
                },
                "station_url": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "UpdateUserParams": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "password_changed_at": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.latestObsRes": {
            "type": "object",
            "properties": {
                "gust": {
                    "$ref": "#/definitions/util.Float4"
                },
                "gust_timestamp": {
                    "type": "string"
                },
                "mslp": {
                    "$ref": "#/definitions/util.Float4"
                },
                "rain": {
                    "$ref": "#/definitions/util.Float4"
                },
                "rain_accum": {
                    "$ref": "#/definitions/util.Float4"
                },
                "rh": {
                    "$ref": "#/definitions/util.Float4"
                },
                "srad": {
                    "$ref": "#/definitions/util.Float4"
                },
                "temp": {
                    "$ref": "#/definitions/util.Float4"
                },
                "timestamp": {
                    "type": "string"
                },
                "tn": {
                    "$ref": "#/definitions/util.Float4"
                },
                "tn_timestamp": {
                    "type": "string"
                },
                "tx": {
                    "$ref": "#/definitions/util.Float4"
                },
                "tx_timestamp": {
                    "type": "string"
                },
                "wdir": {
                    "$ref": "#/definitions/util.Float4"
                },
                "wspd": {
                    "$ref": "#/definitions/util.Float4"
                }
            }
        },
        "api.paginatedLufftMsgLogs": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LufftMsgLog"
                    }
                },
                "next_page": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "prev_page": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "pgtype.Int4": {
            "type": "object",
            "properties": {
                "int32": {
                    "type": "integer"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "util.Float4": {
            "type": "object",
            "properties": {
                "pgtype.Float4": {
                    "type": "number"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Panahon API",
	Description:      "Panahon API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
