definitions:
  CreateRoleParams:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  CreateStationObservationParams:
    properties:
      hi:
        type: number
      mslp:
        type: number
      pres:
        type: number
      qc_level:
        type: integer
      rh:
        type: number
      rr:
        type: number
      srad:
        type: number
      td:
        type: number
      temp:
        type: number
      timestamp:
        type: string
      wchill:
        type: number
      wdir:
        type: number
      wspd:
        type: number
      wspdx:
        type: number
    type: object
  CreateStationParams:
    properties:
      address:
        type: string
      date_installed:
        type: string
      elevation:
        type: number
      lat:
        type: number
      lon:
        type: number
      mobile_number:
        type: string
      name:
        type: string
      province:
        type: string
      region:
        type: string
      station_type:
        type: string
      station_type2:
        type: string
      station_url:
        type: string
      status:
        type: string
    required:
    - name
    type: object
  CreateUserParams:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        minLength: 6
        type: string
      roles:
        items:
          type: string
        type: array
      username:
        type: string
    required:
    - email
    - full_name
    - password
    - username
    type: object
  GlobeLabsLoadResponse:
    properties:
      created_at:
        type: string
      mobile_number:
        type: string
      promo:
        type: string
      status:
        type: string
      transaction_id:
        type: integer
    type: object
  GlobeLabsOptInResponse:
    properties:
      access_token:
        type: string
      is_created:
        type: boolean
      mobile_number:
        type: string
      type:
        type: string
    type: object
  LatestObservation:
    properties:
      address:
        type: string
      elevation:
        type: number
      lat:
        type: number
      lon:
        type: number
      name:
        type: string
      obs:
        $ref: '#/definitions/db.MvObservationsCurrent'
    type: object
  ListRolessResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Role'
        type: array
      page:
        type: integer
      per_page:
        type: integer
      total:
        type: integer
    type: object
  ListStationObservationsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/StationObservation'
        type: array
      page:
        type: integer
      per_page:
        type: integer
      total:
        type: integer
    type: object
  ListStationsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Station'
        type: array
      page:
        type: integer
      per_page:
        type: integer
      total:
        type: integer
    type: object
  ListUsersResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/User'
        type: array
      page:
        type: integer
      per_page:
        type: integer
      total:
        type: integer
    type: object
  LoginUserParams:
    properties:
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  LoginUserResponse:
    properties:
      access_token:
        type: string
      access_token_expires_at:
        type: string
      refresh_token:
        type: string
      refresh_token_expires_at:
        type: string
      session_id:
        type: string
      user:
        $ref: '#/definitions/User'
    type: object
  LufftMsgLogResponse:
    properties:
      message:
        type: string
      timestamp:
        type: string
    type: object
  LufftMsgLogsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/LufftMsgLogResponse'
        type: array
      page:
        type: integer
      per_page:
        type: integer
      total:
        type: integer
    type: object
  LufftResponse:
    properties:
      health:
        $ref: '#/definitions/StationHealth'
      observation:
        $ref: '#/definitions/StationObservation'
      station:
        $ref: '#/definitions/Station'
    type: object
  RegisterUserParams:
    properties:
      confirm_password:
        minLength: 6
        type: string
      email:
        type: string
      full_name:
        type: string
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - confirm_password
    - email
    - full_name
    - password
    - username
    type: object
  RenewAccessTokenParams:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  RenewAccessTokenResponse:
    properties:
      access_token:
        type: string
      access_token_expires_at:
        type: string
    type: object
  Role:
    properties:
      created_at:
        type: string
      description:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  Station:
    properties:
      address:
        type: string
      date_installed:
        type: string
      elevation:
        type: number
      id:
        type: integer
      lat:
        type: number
      lon:
        type: number
      mobile_number:
        type: string
      name:
        type: string
      province:
        type: string
      region:
        type: string
      station_type:
        type: string
      station_type2:
        type: string
      station_url:
        type: string
      status:
        type: string
    type: object
  StationHealth:
    properties:
      bp1:
        type: number
      bp2:
        type: number
      cm:
        type: string
      curr:
        type: number
      data_count:
        type: integer
      data_status:
        type: string
      error_msg:
        type: string
      fpm:
        type: string
      id:
        type: integer
      message:
        type: string
      rh_arq:
        type: number
      ss:
        type: integer
      station_id:
        type: integer
      temp_arq:
        type: number
      timestamp:
        type: string
      vb1:
        type: number
      vb2:
        type: number
    type: object
  StationObservation:
    properties:
      hi:
        type: number
      id:
        type: integer
      mslp:
        type: number
      pres:
        type: number
      qc_level:
        type: integer
      rh:
        type: number
      rr:
        type: number
      srad:
        type: number
      station_id:
        type: integer
      td:
        type: number
      temp:
        type: number
      timestamp:
        type: string
      wchill:
        type: number
      wdir:
        type: number
      wspd:
        type: number
      wspdx:
        type: number
    type: object
  UpdateRoleParams:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  UpdateStationObservationParams:
    type: object
  UpdateStationParams:
    properties:
      address:
        type: string
      date_installed:
        type: string
      elevation:
        type: number
      lat:
        type: number
      lon:
        type: number
      mobile_number:
        type: string
      name:
        type: string
      province:
        type: string
      region:
        type: string
      station_type:
        type: string
      station_type2:
        type: string
      station_url:
        type: string
      status:
        type: string
    type: object
  UpdateUserParams:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        minLength: 6
        type: string
      roles:
        items:
          type: string
        type: array
    type: object
  User:
    properties:
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      password_changed_at:
        type: string
      roles:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
  db.MvObservationsCurrent:
    properties:
      gust:
        type: number
      gust_timestamp:
        type: string
      mslp:
        type: number
      rain:
        type: number
      rain_accum:
        type: number
      rh:
        type: number
      srad:
        type: number
      station_id:
        type: integer
      temp:
        type: number
      timestamp:
        type: string
      tn:
        type: number
      tn_timestamp:
        type: string
      tx:
        type: number
      tx_timestamp:
        type: string
      wdir:
        type: number
      wspd:
        type: number
    type: object
info:
  contact:
    email: emiliogozo@proton.me
    name: Emilio Gozo
  description: Panahon API.
  title: Panahon API
  version: "1.0"
paths:
  /glabs:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: access_token
        type: string
      - in: query
        name: code
        type: string
      - in: query
        name: subscriber_number
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GlobeLabsOptInResponse'
      summary: Globe Labs opt-in
      tags:
      - globelabs
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Globe Labs unsubscribe
      tags:
      - globelabs
  /glabs/load:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GlobeLabsLoadResponse'
      summary: Create Globe Labs entry
      tags:
      - globelabs
  /lufft/{station_id}/logs:
    get:
      consumes:
      - application/json
      parameters:
      - description: Station ID
        in: path
        name: station_id
        required: true
        type: integer
      - in: query
        minimum: 1
        name: page
        type: integer
      - in: query
        maximum: 30
        minimum: 1
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/LufftMsgLogsResponse'
      summary: Lufft Message Logs
      tags:
      - lufft
  /observations:
    get:
      parameters:
      - in: query
        name: end_date
        type: string
      - description: page number
        in: query
        minimum: 1
        name: page
        type: integer
      - description: limit
        in: query
        maximum: 30
        minimum: 1
        name: per_page
        type: integer
      - in: query
        name: start_date
        type: string
      - in: query
        name: station_ids
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListStationObservationsResponse'
      summary: list station observation
      tags:
      - observations
  /observations/latest:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/LatestObservation'
            type: array
      summary: list latest observation
      tags:
      - observations
  /ptexter:
    post:
      consumes:
      - application/json
      parameters:
      - in: query
        name: msg
        required: true
        type: string
      - in: query
        name: number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/LufftResponse'
      summary: Store Lufft observation and health
      tags:
      - promotexter
  /roles:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        minimum: 1
        name: page
        type: integer
      - in: query
        maximum: 30
        minimum: 1
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListRolessResponse'
      security:
      - BearerAuth: []
      summary: List roles
      tags:
      - roles
  /roles/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: Delete role
      tags:
      - roles
    get:
      consumes:
      - application/json
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Role'
      security:
      - BearerAuth: []
      summary: Get role
      tags:
      - roles
    post:
      consumes:
      - application/json
      parameters:
      - description: Create role parameters
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/CreateRoleParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Role'
      security:
      - BearerAuth: []
      summary: Create role
      tags:
      - roles
    put:
      consumes:
      - application/json
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update role parameters
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/UpdateRoleParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Role'
      security:
      - BearerAuth: []
      summary: Update role
      tags:
      - roles
  /stations:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: bbox
        type: string
      - in: query
        name: circle
        type: string
      - description: page number
        in: query
        minimum: 1
        name: page
        type: integer
      - description: limit
        in: query
        maximum: 30
        minimum: 1
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListStationsResponse'
      summary: List stations
      tags:
      - stations
    post:
      consumes:
      - application/json
      parameters:
      - description: Create station parameters
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/CreateStationParams'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Station'
      security:
      - BearerAuth: []
      summary: Create station
      tags:
      - stations
  /stations/{station_id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Station ID
        in: path
        name: station_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: Delete station
      tags:
      - stations
    get:
      consumes:
      - application/json
      parameters:
      - description: Station ID
        in: path
        name: station_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Station'
      summary: Get station
      tags:
      - stations
    put:
      consumes:
      - application/json
      parameters:
      - description: Station ID
        in: path
        name: station_id
        required: true
        type: integer
      - description: Update station parameters
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/UpdateStationParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Station'
      security:
      - BearerAuth: []
      summary: Update station
      tags:
      - stations
  /stations/{station_id}/observations:
    get:
      consumes:
      - application/json
      parameters:
      - description: Station ID
        in: path
        name: station_id
        required: true
        type: integer
      - in: query
        name: end_date
        type: string
      - description: page number
        in: query
        minimum: 1
        name: page
        type: integer
      - description: limit
        in: query
        maximum: 30
        minimum: 1
        name: per_page
        type: integer
      - in: query
        name: start_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListStationObservationsResponse'
      summary: List station observations
      tags:
      - observations
    post:
      consumes:
      - application/json
      parameters:
      - description: Station ID
        in: path
        name: station_id
        required: true
        type: integer
      - description: Create station observation parameters
        in: body
        name: stnObs
        required: true
        schema:
          $ref: '#/definitions/CreateStationObservationParams'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/StationObservation'
      security:
      - BearerAuth: []
      summary: Create station observation
      tags:
      - observations
  /stations/{station_id}/observations/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Station ID
        in: path
        name: station_id
        required: true
        type: integer
      - description: Station Observation ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: Delete station observation
      tags:
      - observations
    get:
      consumes:
      - application/json
      parameters:
      - description: Station ID
        in: path
        name: station_id
        required: true
        type: integer
      - description: Station Observation ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/StationObservation'
      summary: Get station observation
      tags:
      - observations
    put:
      parameters:
      - description: Station ID
        in: path
        name: station_id
        required: true
        type: integer
      - description: Station Observation ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update station observation parameters
        in: body
        name: stnObs
        required: true
        schema:
          $ref: '#/definitions/UpdateStationObservationParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/StationObservation'
      security:
      - BearerAuth: []
      summary: Update station observation
      tags:
      - observations
  /stations/{station_id}/observations/latest:
    get:
      consumes:
      - application/json
      parameters:
      - description: Station ID
        in: path
        name: station_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/LatestObservation'
      summary: Get latest station observation
      tags:
      - observations
  /tokens/renew:
    post:
      consumes:
      - application/json
      parameters:
      - description: Renew access token parameters
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/RenewAccessTokenParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RenewAccessTokenResponse'
      summary: Renew access token
      tags:
      - users
  /users:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        minimum: 1
        name: page
        type: integer
      - in: query
        maximum: 30
        minimum: 1
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListUsersResponse'
      security:
      - BearerAuth: []
      summary: List users
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: Delete user
      tags:
      - users
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      security:
      - BearerAuth: []
      summary: Get user
      tags:
      - users
    post:
      consumes:
      - application/json
      parameters:
      - description: Create user parameters
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/CreateUserParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      security:
      - BearerAuth: []
      summary: Create user
      tags:
      - users
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update user parameters
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/UpdateUserParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      security:
      - BearerAuth: []
      summary: Update user
      tags:
      - users
  /users/auth:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      security:
      - BearerAuth: []
      summary: Get Auth User
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login user parameters
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/LoginUserParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/LoginUserResponse'
      summary: User login
      tags:
      - users
  /users/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Register user parameters
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/RegisterUserParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      summary: Register user
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
